{"version":3,"sources":["spotify.js","Login.js","SidebarOption.js","DataLayer.js","Sidebar.js","Header.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","createContext","useDataLayerValue","useContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","Sidebar","playlists","HomeIcon","SearchIcon","LibraryIcon","items","map","playlist","name","Header","spotify","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","artists","artist","Body","discover_weekly","description","fontSize","tracks","item","Footer","Grid","container","spacing","xs","Slider","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","console","log","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","state","action","Boolean","hostname","match","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.56c6c2b9.chunk.js","sourcesContent":["// https://developer.spotify.com/\r\n// documentation/web-playback-sdk/quick-start/#\r\n\r\nexport const authEndPoint = \"https://accounts.spotify.com/authorize\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\nconst clientId = \"571b8774484a4ea180e709a8ccf45a16\";\r\n\r\nconst scopes = [\r\n    \"user-read-currently-playing\",\r\n    \"user-read-recently-played\",\r\n    \"user-read-playback-state\",\r\n    \"user-top-read\",\r\n    \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromUrl = () => {\r\n    return window.location.hash\r\n        .substring(1)\r\n        .split('&')\r\n        .reduce((initial, item) => {\r\n            var parts = item.split('=');\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n            return initial;\r\n        }, {});\r\n}\r\n\r\nexport const loginUrl = `${authEndPoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport { loginUrl } from './spotify';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"\" />\r\n            <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login; ","import React from 'react';\r\nimport './SidebarOption.css';\r\n\r\nconst SidebarOption = ({ title, Icon }) => {\r\n    return (\r\n        <div className='sidebarOption'>\r\n            {Icon && <Icon className=\"sidebarOption__icon\"></Icon>}\r\n            {Icon ? <h4>{title}</h4> :<p>{title}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SidebarOption;","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n\r\nexport default DataLayer;","import React from 'react';\r\nimport './Sidebar.css';\r\nimport SidebarOption from './SidebarOption';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryIcon from '@material-ui/icons/LibraryMusic';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nconst Sidebar = () => {\r\n    const [{ playlists }, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <img className=\"sidebar__logo\" src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"\" />\r\n            <SidebarOption title=\"Home\" Icon={HomeIcon} />\r\n            <SidebarOption title=\"Search\" Icon={SearchIcon} />\r\n            <SidebarOption title=\"Your Library\" Icon={LibraryIcon} />\r\n\r\n            <br />\r\n            <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n            <hr />\r\n            \r\n            {playlists?.items?.map( (playlist) => (\r\n                <SidebarOption title={playlist.name} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nconst Header = ({ spotify }) => {\r\n    const [{ user }, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"header__left\">\r\n                <SearchIcon />\r\n                <input placeholder=\"Search for Artists, Songs, or Podcasts\" type=\"text\" />\r\n            </div>\r\n\r\n            <div className=\"header__right\">\r\n                <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\r\n                <h4>{user?.display_name}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './SongRow.css';\r\n\r\nconst SongRow = ({ track = \"test\" }) => {\r\n    return (\r\n        <div className=\"songRow\">\r\n            <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n            <div className=\"songRow__info\">\r\n                <h1>{track.name}</h1>\r\n                <p>\r\n                    {track.artists.map(artist => artist.name).join(\", \")}\r\n                    {track.album.name}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SongRow;","import React from 'react';\r\nimport './Body.css';\r\nimport Header from './Header';\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\r\nimport SongRow from './SongRow';\r\n\r\nconst Body = ({ spotify }) => {\r\n    const [{ discover_weekly }, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <Header spotify={spotify} />\r\n\r\n            <div className=\"body__info\">\r\n                <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n                <div className=\"body__infoText\">\r\n                    <strong>PLAYLIST</strong>\r\n                    <h2>Discover Weekly</h2>\r\n                    <p>{discover_weekly?.description}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body__songs\">\r\n                <div className=\"body__icons\">\r\n                    <PlayCircleFilledIcon className=\"body__shuffle\"/> \r\n                    <FavoriteIcon fontSize=\"large\" /> \r\n                    <MoreHorizIcon />\r\n                </div>\r\n\r\n                {/* {List of songs} */}\r\n                {discover_weekly?.tracks.items.map(item => (\r\n                    <SongRow track={item.track} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Body;","import React from 'react';\r\nimport './Footer.css';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNext from '@material-ui/icons/SkipNext';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport { Grid, Slider } from '@material-ui/core';\r\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer__left\">\r\n                <img className=\"footer__albumLogo\" src=\"\" alt=\"\"/>\r\n                <div className=\"footer__songInfo\">\r\n                    <h4>Yeah!</h4>\r\n                    <p>Usher</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"footer__center\">\r\n                <ShuffleIcon className=\"footer__green\" />\r\n                <SkipPreviousIcon className=\"footer__icon\" />\r\n                <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer__icon\" />\r\n                <SkipNext className=\"footer__icon\" />\r\n                <RepeatIcon className=\"footer__green\" />\r\n            </div>\r\n\r\n            <div className=\"footer__right\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <PlaylistPlayIcon />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <VolumeDownIcon />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Slider />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Player.css';\r\nimport Sidebar from './Sidebar';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\n\r\nconst Player = ({ spotify }) => {\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"player__body\">\r\n                <Sidebar />\r\n                <Body spotify={spotify}/>\r\n            </div>\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n    const [{ user, token }, dispatch] = useDataLayerValue();\n\n    useEffect(() => {\n        const hash = getTokenFromUrl();\n        window.location.hash = \"\";\n        const _token = hash.access_token;\n        console.log(_token);\n\n        if (_token) {\n            dispatch({\n                type: 'SET_TOKEN',\n                token: _token,\n            });\n\n            spotify.setAccessToken(_token);\n            spotify.getMe().then((user) => {\n                dispatch({\n                    type: 'SET_USER',\n                    user: user,\n                });\n            });\n\n            spotify.getUserPlaylists().then((playlists) => {\n                dispatch({\n                    type: 'SET_PLAYLISTS',\n                    playlists: playlists,\n                });\n            });\n\n            spotify.getPlaylist('37i9dQZF1E36tW5bkWLjXH').then(response => {\n                console.log('response:'+response);\n                dispatch({\n                    type: 'SET_DISCOVER_WEEKLY',\n                    discover_weekly: response\n                });\n            });\n        }\n    }, []);\n\n\n\n    return (\n        <div className=\"App\">\n            {token ? <Player spotify={spotify} /> : <Login />}\n        </div>\n    );\n}\n\nexport default App;\n","export const initialState = {\r\n    user: null,\r\n    playlists: [],\r\n    playing: false,\r\n    item: null,\r\n    // Remove after developing...\r\n    // token: 'BQAylQYW8RtSnfrCtA9qIyzJDO90yzuyKtHPQN6fj6AokeMsJaCa6EX5gyeSdpeCbwTsq-qqhLwZGmWiDS5f11BziycTEslEGwdrrWygJo9kKjy4W2tcf0KliDCdjnQbQGjGglrBHN9XLAcegdG2JvRVl5OH9Z57NySTVoo3a76wtYNKhGuG',\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n\r\n    // Action -> type, [payload]\r\n\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n\r\n        case 'SET_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n\r\n        case 'SET_PLAYLISTS':\r\n            return {\r\n                ...state,\r\n                playlists: action.playlists\r\n            }\r\n\r\n        case 'SET_DISCOVER_WEEKLY':\r\n            return {\r\n                ...state,\r\n                discover_weekly: action.discover_weekly\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport DataLayer from './DataLayer';\nimport reducer, { initialState } from './reducer';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}